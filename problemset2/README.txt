
Nicasia Beebe-Wang 1723387 nbbwang@uw.edu
Ayse Berceste Dincer 1723315 abdincer@uw.edu

Paxos and LockServer implementation for CSE550.

Date of submission: November 5, 2018

Instructions to run the code:Our implementation is designed to be ran in many different settings:1)Simplest Execution:	‘python3 LockServer.py’ would start our server. 	‘python3 InteractiveClient.py’ would start a client (in another screen/tab).	
You can type ‘lock 0’ to acquire lock 0 and ‘unlock 0’ to release lock 0. You can lock/unlock any lock available in the system.Note that this version assumes that no node failure or message failure happens.2)Stopping a Node	‘python3 LockServer.py’ would start our server. When the server code is running, you can type ‘quit 0’ to stop Node 0 and you can repeat this operation for any node in the system. You can use InteractiveClient.py as before. This allows you to simulate a Node failure.3)Client Demos	‘python3 LockServer.py’ would start our server. 	‘python3 ClientDemos.py’ would start the client demos.After starting LockServer, you can start ClientDemos to execute previously defined demos and observe the system behavior in various states of the algorithm.4)Message Failures	‘python3 LockServer.py 0’ would start our server. In this case, our LockServer would assume that there is a 20% probability for any message in the system to fail. With this demo, we can observe the system behavior in case of message failures. Note that messages can fail at any state of the algorithm.5)Node Failure Demos	‘python3 LockServer.py 1’ would start our server. We defined a set of server demos to simulate Node failures in different stages of the algorithm. Since the server is very fast, it might be hard to fail nodes very quickly with manual quit commands, thus, these predefined demos might be more helpful.Below is the list of demos:‘python3 LockServer.py 1’ (Node 1 will fail after sending proposal)‘python3 LockServer.py 2’ (Node 2 will fail after sending accept)‘python3 LockServer.py 3’ (Node 3 will fail after receiving prepare message)‘python3 LockServer.py 4’ (Node 4  will fail after receiving accept message)‘python3 LockServer.py 5’ (Node 2 and 3 will fail after receiving prepare message)‘python3 LockServer.py 6’ (Node 0 and 1 will fail after receiving accept message)‘python3 LockServer.py 7’ (Node 0, 1 and 4 will fail after receiving accept message)